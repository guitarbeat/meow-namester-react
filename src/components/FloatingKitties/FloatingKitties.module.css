/* * Floating Kitties Background Component */

.kittiesWrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  overflow: hidden;
  z-index: -1;
  pointer-events: none;
}

/* * Space overlay for better text readability */
.spaceOverlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(26, 31, 46, 0.7) 0%,
    rgba(44, 62, 64, 0.5) 50%,
    rgba(26, 31, 46, 0.8) 100%
  );
  backdrop-filter: blur(1px);
}

/* * Twinkling stars effect */
.spaceOverlay::before {
  content: "";
  position: absolute;
  inset: 0;
  background-image:
    radial-gradient(
      2px 2px at 20px 30px,
      rgba(255, 255, 255, 0.8),
      transparent
    ),
    radial-gradient(
      2px 2px at 40px 70px,
      rgba(255, 255, 255, 0.6),
      transparent
    ),
    radial-gradient(
      1px 1px at 90px 40px,
      rgba(255, 255, 255, 0.8),
      transparent
    ),
    radial-gradient(
      1px 1px at 130px 80px,
      rgba(255, 255, 255, 0.6),
      transparent
    ),
    radial-gradient(
      2px 2px at 160px 30px,
      rgba(255, 255, 255, 0.8),
      transparent
    );
  background-repeat: repeat;
  background-size: 200px 100px;
  animation: twinkle 4s ease-in-out infinite;
}

@keyframes twinkle {
  0%,
  100% {
    opacity: 0.3;
  }
  50% {
    opacity: 1;
  }
}

/* * Individual kittie wrapper */
.kittieWrapper {
  position: absolute;
  width: var(--kittie-size);
  height: var(--kittie-size);
  left: var(--start-x);
  top: var(--start-y);
  animation: floatKittie var(--duration) ease-in-out var(--delay) forwards;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-iteration-count: 1;
}

/* * Kittie image styling */
.kittieImage {
  width: 100%;
  height: 100%;
  object-fit: contain;
  transition: filter 0.3s ease;
}

/* * Glow effects based on kittie type */
.kittieWrapper[style*="--glow-color: 0"] .kittieImage {
  filter: drop-shadow(0 0 8px rgba(47, 243, 224, 0.6));
}

.kittieWrapper[style*="--glow-color: 1"] .kittieImage {
  filter: drop-shadow(0 0 8px rgba(250, 38, 160, 0.6));
}

.kittieWrapper[style*="--glow-color: 2"] .kittieImage {
  filter: drop-shadow(0 0 8px rgba(245, 23, 32, 0.6));
}

/* * Conditional glow effects */
.kittieWrapper.glowEnabled .kittieImage {
  filter: drop-shadow(0 0 8px rgba(47, 243, 224, 0.6));
}

.kittieWrapper.glowEnabled[style*="--glow-color: 0"] .kittieImage {
  filter: drop-shadow(0 0 8px rgba(47, 243, 224, 0.6));
}

.kittieWrapper.glowEnabled[style*="--glow-color: 1"] .kittieImage {
  filter: drop-shadow(0 0 8px rgba(250, 38, 160, 0.6));
}

.kittieWrapper.glowEnabled[style*="--glow-color: 2"] .kittieImage {
  filter: drop-shadow(0 0 8px rgba(245, 23, 32, 0.6));
}

/* * Floating animation keyframes */
@keyframes floatKittie {
  0% {
    transform: translate(var(--start-x), var(--start-y)) rotate(var(--rotation))
      scale(0.8);
    opacity: 0;
  }

  15% {
    opacity: 1;
    transform: translate(
        calc(var(--start-x) + (var(--end-x) - var(--start-x)) * 0.15),
        calc(var(--start-y) + (var(--end-y) - var(--start-y)) * 0.15)
      )
      rotate(calc(var(--rotation) + 90deg)) scale(1);
  }

  85% {
    opacity: 1;
    transform: translate(
        calc(var(--start-x) + (var(--end-x) - var(--start-x)) * 0.85),
        calc(var(--start-y) + (var(--end-y) - var(--start-y)) * 0.85)
      )
      rotate(calc(var(--rotation) + 315deg)) scale(1);
  }

  100% {
    transform: translate(var(--end-x), var(--end-y))
      rotate(calc(var(--rotation) + 360deg)) scale(0.6);
    opacity: 0;
  }
}

/* * Responsive adjustments */
@media (max-width: 768px) {
  .kittiesWrapper {
    background-attachment: scroll;
  }

  .kittieWrapper {
    --kittie-size: calc(var(--kittie-size) * 0.7);
  }
}

@media (max-width: 480px) {
  .kittieWrapper {
    --kittie-size: calc(var(--kittie-size) * 0.5);
  }
}

/* * Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .kittieWrapper {
    animation: none;
    opacity: 0.3;
  }

  .kittieWrapper:hover .kittieImage {
    transform: none;
  }
}

/* * High contrast mode adjustments */
@media (prefers-contrast: more) {
  .spaceOverlay {
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.8) 0%,
      rgba(0, 0, 0, 0.6) 50%,
      rgba(0, 0, 0, 0.9) 100%
    );
  }

  .kittieImage {
    filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.8));
  }
}
