@import url("https://fonts.googleapis.com/css?family=Mali");

/* Component-specific variables - scoped to avoid conflicts with global theme */
.bongoCat {
  --cat-bg: #000; /* Black cat */
  --cat-outline: #222; /* Slightly lighter than black for contrast */
  --toebean: #44262c; /* Brighter pink for visibility */
  --linesize: 2px;
  --scale: 0.22; /* Scale factor to make everything smaller */
  --cat-size: 1;
}

/* Base Styles */
.container {
  position: relative;
  top: -10px; /* Added to move the cat up slightly */
  width: calc(80rem * var(--scale));
  height: calc(80rem * var(--scale));
  transform: scale(var(--cat-size));
}

/* Dynamic positioning classes to replace inline styles */
.bongoContainer {
  position: absolute;
  left: 50%;
  z-index: 10; /* Ensure BongoCat is above background but below content */
  width: 180px;
  max-width: 100%;
  aspect-ratio: 1;
  pointer-events: none;
  transform: translateX(-50%);
  transition:
    top 0.2s ease-out,
    opacity 0.3s ease;
}

.bongoContainerPositioned {
  position: absolute;
  left: 50%;
  z-index: 10; /* Ensure BongoCat is above background but below content */
  width: 180px;
  max-width: 100%;
  aspect-ratio: 1;
  pointer-events: none;
  transform: translateX(-50%);
  transition:
    top 0.2s ease-out,
    opacity 0.3s ease;
}

.bongoContainerVisible {
  visibility: visible;
  opacity: 1;
}

.bongoContainerHidden {
  visibility: hidden;
  opacity: 0;
}

.container * {
  position: absolute;
}

.hide {
  display: none;
}

.cat {
  /* transform: rotate(15deg); */
  top: calc(15rem * var(--scale));
  left: calc(15rem * var(--scale));
}

.head {
  width: calc(70rem * var(--scale));
  height: calc(60rem * var(--scale));
  background: var(--cat-bg);
  border: var(--linesize) solid var(--cat-outline);
  border-radius: 50%;
}

/* Ears - Base styles */
.ears .ear:first-child {
  border-right: calc(7rem * var(--scale)) solid transparent;
  border-left: calc(7rem * var(--scale)) solid transparent;
  transform: translate(calc(17rem * var(--scale)), calc(-5rem * var(--scale)))
    rotate(-15deg);
}

.ears .ear:last-child {
  border-right: calc(9rem * var(--scale)) solid transparent;
  border-left: calc(3rem * var(--scale)) solid transparent;
  transform: translate(calc(53rem * var(--scale)), calc(-2rem * var(--scale)))
    rotate(33deg);
}

/* Fill variant */
.ears.fill .ear:first-child {
  top: calc(1.2rem * var(--scale));
  left: calc(0.4rem * var(--scale));
  border-bottom: calc(8rem * var(--scale)) solid var(--cat-bg);
}

.ears.fill .ear:last-child {
  top: calc(1.2rem * var(--scale));
  left: calc(0.4rem * var(--scale));
  border-bottom: calc(8rem * var(--scale)) solid var(--cat-bg);
}

/* Outline variant */
.ears.outline .ear:first-child {
  top: calc(1.2rem * var(--scale));
  left: calc(0.4rem * var(--scale));
  border-bottom: calc(8rem * var(--scale)) solid var(--cat-outline);
}

.ears.outline .ear:last-child {
  top: calc(1.2rem * var(--scale));
  left: calc(0.4rem * var(--scale));
  border-bottom: calc(8rem * var(--scale)) solid var(--cat-outline);
}

/* Face */
.face {
  top: calc(20rem * var(--scale));
  left: calc(15rem * var(--scale));
  width: calc(40rem * var(--scale));
  height: calc(30rem * var(--scale));
  background: var(--cat-bg);
  border: var(--linesize) solid var(--cat-outline);
  border-radius: 50%;
}

/* Eyes */
.eyes {
  top: calc(8rem * var(--scale));
  left: calc(8rem * var(--scale));
  width: calc(24rem * var(--scale));
  height: calc(12rem * var(--scale));
}

.eye {
  position: absolute;
  top: 0;
  width: calc(8rem * var(--scale));
  height: calc(8rem * var(--scale));
  background: white;
  border: var(--linesize) solid var(--cat-outline);
  border-radius: 50%;
}

.eye:first-child {
  left: 0;
}

.eye:last-child {
  right: 0;
}

/* Mouth */
.mouth {
  top: calc(18rem * var(--scale));
  left: calc(12rem * var(--scale));
  width: calc(16rem * var(--scale));
  height: calc(8rem * var(--scale));
}

.uu {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--cat-bg);
  border: var(--linesize) solid var(--cat-outline);
  border-top: none;
  border-radius: 0 0 50% 50%;
}

/* Paws */
.paws {
  position: absolute;
  left: 50%;
  display: flex;
  gap: calc(2rem * var(--scale));
  transform: translateX(-50%);
}

.paws.up {
  top: calc(65rem * var(--scale));
}

.paws.down {
  top: calc(75rem * var(--scale));
}

.paw {
  position: relative;
  width: calc(12rem * var(--scale));
  height: calc(12rem * var(--scale));
}

.palm {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--cat-bg);
  border: var(--linesize) solid var(--cat-outline);
  border-radius: 50%;
}

.bean {
  position: absolute;
  width: calc(3rem * var(--scale));
  height: calc(3rem * var(--scale));
  background: var(--toebean);
  border: var(--linesize) solid var(--cat-outline);
  border-radius: 50%;
}

.bean:first-child {
  top: calc(2rem * var(--scale));
  left: calc(2rem * var(--scale));
}

.bean:nth-child(2) {
  top: calc(2rem * var(--scale));
  left: calc(5rem * var(--scale));
}

.bean:last-child {
  top: calc(5rem * var(--scale));
  left: calc(3.5rem * var(--scale));
}

/* Animation for paws */
.paws.up .paw {
  animation: pawUp 0.3s ease-out;
}

.paws.down .paw {
  animation: pawDown 0.3s ease-out;
}

@keyframes pawUp {
  0% {
    transform: translateY(calc(10rem * var(--scale)));
  }

  100% {
    transform: translateY(0);
  }
}

@keyframes pawDown {
  0% {
    transform: translateY(calc(-10rem * var(--scale)));
  }

  100% {
    transform: translateY(0);
  }
}

/* Hover effects */
.container:hover .head {
  transform: scale(1.05);
  transition: transform 0.2s ease;
}

.container:hover .face {
  transform: scale(1.05);
  transition: transform 0.2s ease;
}

/* Responsive adjustments */
@media (width <= 768px) {
  .bongoContainer,
  .bongoContainerPositioned {
    width: 140px; /* Smaller on mobile */
  }

  .container {
    transform: scale(calc(var(--cat-size) * 0.8)); /* Scale down on mobile */
  }
}

@media (width <= 480px) {
  .bongoContainer,
  .bongoContainerPositioned {
    width: 120px; /* Even smaller on small mobile */
  }

  .container {
    transform: scale(
      calc(var(--cat-size) * 0.7)
    ); /* Scale down more on small mobile */
  }
}
