@import url("https://fonts.googleapis.com/css?family=Mali");

/* Variables */
:root {
  --cat-bg: #000; /* Black cat */
  --cat-outline: #222; /* Slightly lighter than black for contrast */
  --toebean: #44262c; /* Brighter pink for visibility */
  --linesize: 2px;
  --scale: 0.22; /* Scale factor to make everything smaller */
  --cat-size: 1;
}

/* Base Styles */
.container {
  position: relative;
  top: -10px; /* Added to move the cat up slightly */
  width: calc(80rem * var(--scale));
  height: calc(80rem * var(--scale));
  transform: scale(var(--cat-size));
}

/* Dynamic positioning classes to replace inline styles */
.bongoContainer {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  width: 180px;
  max-width: 100%;
  aspect-ratio: 1;
  pointer-events: none;
  transition:
    top 0.2s ease-out,
    opacity 0.3s ease;
}

.bongoContainerPositioned {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  width: 180px;
  max-width: 100%;
  aspect-ratio: 1;
  pointer-events: none;
  transition:
    top 0.2s ease-out,
    opacity 0.3s ease;
}

.bongoContainerVisible {
  opacity: 1;
  visibility: visible;
}

.bongoContainerHidden {
  opacity: 0;
  visibility: hidden;
}

.container * {
  position: absolute;
}

.hide {
  display: none;
}

.cat {
  /* transform: rotate(15deg); */
  top: calc(15rem * var(--scale));
  left: calc(15rem * var(--scale));
}

.head {
  width: calc(70rem * var(--scale));
  height: calc(60rem * var(--scale));
  background: var(--cat-bg);
  border: var(--linesize) solid var(--cat-outline);
  border-radius: 50%;
}

/* Ears - Base styles */
.ears .ear:first-child {
  border-right: calc(7rem * var(--scale)) solid transparent;
  border-left: calc(7rem * var(--scale)) solid transparent;
  transform: translate(calc(17rem * var(--scale)), calc(-5rem * var(--scale)))
    rotate(-15deg);
}

.ears .ear:last-child {
  border-right: calc(9rem * var(--scale)) solid transparent;
  border-left: calc(3rem * var(--scale)) solid transparent;
  transform: translate(calc(53rem * var(--scale)), calc(-2rem * var(--scale)))
    rotate(33deg);
}

/* Fill variant */
.ears.fill .ear:first-child {
  top: calc(1.2rem * var(--scale));
  left: calc(0.4rem * var(--scale));
  border-bottom: calc(8rem * var(--scale)) solid var(--cat-bg);
}

.ears.fill .ear:last-child {
  top: calc(1.7rem * var(--scale));
  left: calc(-0.5rem * var(--scale));
  border-bottom: calc(10rem * var(--scale)) solid var(--cat-bg);
}

/* Outline variant */
.ears.outline .ear:first-child {
  border-bottom: calc(8rem * var(--scale)) solid var(--cat-outline);
}

.ears.outline .ear:last-child {
  border-bottom: calc(10rem * var(--scale)) solid var(--cat-outline);
}

/* Face */
.face {
  top: calc(20rem * var(--scale));
  left: calc(17rem * var(--scale));
  width: calc(70rem * var(--scale));
}

.eyes {
  display: flex;
}

.eye {
  position: relative;
  display: inline-block;
  width: calc(3rem * var(--scale));
  height: calc(3rem * var(--scale));
  background: #fff; /* White eyes for visibility */
  border-radius: 50%;
  animation: blink 5s ease infinite;
}

.eyes .eye:first-child {
  margin-right: calc(20rem * var(--scale));
}

.mouth {
  top: calc(1rem * var(--scale));
  left: calc(6.5rem * var(--scale));
}

.uu {
  position: relative;
}

.uu::before,
.uu::after {
  display: inline-block;
  width: calc(4rem * var(--scale));
  height: calc(1.5rem * var(--scale));
  content: "";
  border: var(--cat-outline) solid var(--linesize);
  border-color: var(--border-color); /* Use theme border color */
  border-top: none;
  border-radius: 0 0 50% 50% / 0 0 100% 100%;
}

.uu::after {
  margin-left: calc(-0.9rem * var(--scale));
}

/* Paws */
.paws {
  top: 70%;
  left: 50%;
  width: calc(80rem * var(--scale));
  transform: translateX(-50%);
  transform-origin: 50% 0%;
}

.paws.up .paw {
  width: calc(15rem * var(--scale));
  height: calc(14rem * var(--scale));
  background: var(--cat-bg);
  border-right: var(--linesize) solid var(--cat-outline);
  border-bottom: var(--linesize) solid var(--cat-outline);
  border-radius: 0 0 50% 50% / 0 0 70% 70%;
  box-shadow: 0 1px 4px rgb(0 0 0 / 30%);
  transform: rotate(150deg);
  transform-origin: 50% 0%;
}

.paws.up .paw .palm {
  top: calc(4rem * var(--scale));
  left: calc(6rem * var(--scale));
  width: calc(4rem * var(--scale));
  height: calc(4rem * var(--scale));
  background: var(--toebean);
  border-radius: 50%;
  box-shadow: inset 0 -1px 2px rgb(0 0 0 / 20%);
}

.paws.up .paw .bean {
  top: calc(9.5rem * var(--scale));
  left: calc(7rem * var(--scale));
  width: calc(2.5rem * var(--scale));
  height: calc(2.5rem * var(--scale));
  background: var(--toebean);
  border-radius: 50%;
  box-shadow: inset 0 -1px 2px rgb(0 0 0 / 20%);
}

.paws.up .paw .bean:first-child {
  top: calc(8rem * var(--scale));
  left: calc(3.5rem * var(--scale));
}

.paws.up .paw .bean:last-child {
  top: calc(8rem * var(--scale));
  left: calc(10.5rem * var(--scale));
}

.paws.down .paw {
  width: calc(15rem * var(--scale));
  height: calc(13rem * var(--scale));
  margin-top: calc(-0.5rem * var(--scale));
  background: var(--cat-bg);
  border-right: var(--linesize) solid var(--cat-outline);
  border-bottom: var(--linesize) solid var(--cat-outline);
  border-left: var(--linesize) solid var(--cat-outline);
  border-radius: 0 0 50% 50% / 0 0 80% 80%;
  box-shadow: 0 1px 4px rgb(0 0 0 / 30%);
  transform: rotate(15deg);
  transform-origin: 50% 0%;
}

.paws.down .paw::before {
  position: absolute;
  top: 0;
  right: 0;
  display: block;
  width: 100%;
  height: calc(3rem * var(--scale));
  content: "";
  background: var(--cat-bg);
  border-right: var(--linesize) solid var(--cat-outline);
  transform: translate(calc(1rem * var(--scale)), -90%);
}

.paws.down .paw:first-child {
  left: calc(16.5rem * var(--scale));
}

.paws .paw:first-child {
  left: calc(14rem * var(--scale));
}

.paws .paw:last-child {
  left: calc(65rem * var(--scale));
}

/* Animations */
@keyframes blink {
  0% {
    transform: scaleY(1);
  }

  3% {
    transform: scaleY(0.1);
  }

  6% {
    transform: scaleY(1);
  }

  100% {
    transform: scaleY(1);
  }
}

/* Helper class for BongoCat container with positioning is now handled in-component */
.bongoContainer {
  position: absolute;
  top: 0;
  left: 50%;
  z-index: 20; /* Ensure cat stays above other elements */
  width: 180px;
  max-width: 100%;
  aspect-ratio: 1;
  pointer-events: none;
  transform: translateX(-50%);
  transition:
    top 0.2s ease-out,
    opacity 0.3s ease;
}

/* No longer needed since we're using a different approach for the paws */

/* .pawsContainer {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
} */
