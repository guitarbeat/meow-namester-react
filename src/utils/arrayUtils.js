/**
 * Shuffles an array using the Fisher-Yates algorithm
 * @param {Array} array The array to shuffle
 * @returns {Array} A new shuffled array
 */
/**
 * --- AUTO-GENERATED DOCSTRING ---
 * Table of content is automatically generated by Agent Docstrings v1.3.5
 *
 * Classes/Functions:
 *   - export function shuffleArray(array) (line 16)
 *   - if (!Array.isArray(array)) (line 17)
 *   - for (let i = newArray.length - 1; i > 0; i--) (line 23)
 * --- END AUTO-GENERATED DOCSTRING ---
 */
export function shuffleArray(array) {
  if (!Array.isArray(array)) {
    console.warn('shuffleArray received non-array input:', array);
    return [];
  }

  const newArray = [...array];
  try {
    for (let i = newArray.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
    }
    return newArray;
  } catch (error) {
    if (process.env.NODE_ENV === 'development') {
      console.error('Error in shuffleArray:', error);
    }
    return array;
  }
}
